"""This script inputs the JSON file generated by lichess_evals_extractor.py and outputs a CSV file
containing the following columns:
- White, Black, WhiteElo, BlackElo, WhiteResult, BlackResult, gi, gpl, acpl, white_move_number, black_move_number
"""

import json
import os
import pandas as pd
from pandas import json_normalize

def extract_last_name(full_name):
    if not full_name:
        return ''
    
    if ',' in full_name:
        last_name = full_name.split(',')[0].strip()
    else:
        parts = full_name.split()
        last_name = parts[-1].strip()

    return last_name

data_list = []

# Update the file path to the single JSON file containing all subfiles
json_file_path = 'json_file_path'

try:
    with open(json_file_path, 'r') as f:
        all_data = json.load(f)

        # Iterate through each key in the JSON file
        for key, data in all_data.items():
            white_player = data.get('White', '')
            black_player = data.get('Black', '')

            data['White'] = extract_last_name(white_player)
            data['Black'] = extract_last_name(black_player)

            flattened_data = json_normalize(data)
            data_list.append(flattened_data)

except Exception as e:
    print(f'Error processing {json_file_path}: {e}')

data_frame = pd.concat(data_list, ignore_index=True)

# Update the output directory and file path as needed
output_directory = 'output_directory'
output_file = 'aggregated_data.csv'
output_path = os.path.join(output_directory, output_file)

if not os.path.exists(output_directory):
    os.makedirs(output_directory)

data_frame.to_csv(output_path, index=False)
